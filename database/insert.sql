USE CourseManager;
INSERT INTO Course (name, year, semester, description, info, course_length) VALUES 
("CNPM", 2020, 1, "Mon thay Hung", "info", 12), 
("Lap Trinh Mang", 2020, 2, "Mon thay Khanh", "info", 13), 
("Lap Trinh Web", 2020, 1, "Mon thay Duc", "info", 12),
("Algorithms II", NULL, NULL, "<p>Thanks for enrolling in our course Algorithms, Part II. You can review the syllabus for an overview of the course components. The course is based on a variety of material that we have prepared over many years:</p><ul><li>The lecture videos, lecture slides, programming assignments, and job interview questions will be released weekly on the course website.</li><li>Our textbook Algorithms, 4th edition is the basic reference for the material we will be covering. Although the lectures are designed to be self-contained, we will assign optional readings for students who wish more extensive coverage of the material.</li><li>Our booksite, which is open to everyone and contains a wealth of supplementary information, including synopses of the textbook and Java code that you will be using throughout the course.</li></ul><p>To maximize your chance of success in this course, you should get in the mindset of being an <em>active</em> participant who writes and debugs code, solves problems, studies the available resources, and engages in the discussion forums, as opposed to a <em>passive</em> participant who just watches the lectures. You'll get a good feeling for the spirit and pace of the course when you work on the first programming assignment, which will introduce you to our Java programming model in the context of an important scientific application.</p><p>If you would like news and information about Princeton Online's other courses, please follow us on Facebook, Twitter, and YouTube.</p>", 12);

INSERT INTO StudyMaterial VALUES (0, 1, 1);

INSERT INTO Homework VALUES (0, 1, 1);

<h2 class=\"tab-headline\"><span>Syllabus</span></h2><div id=\"\" class=\"rc-CML styled\" dir=\"auto\"><div><p><strong>Description.</strong> An introduction to fundamental data types, algorithms, and data structures. Our emphasis is on applications and scientific performance analysis of Java implementations.</p><ul><li>Part I focuses on elementary data structures, sorting, and searching. Topics include union-find, binary search, stacks, queues, bags, insertion sort, selection sort, shellsort, quicksort, 3-way quicksort, mergesort, heapsort, binary heaps, binary search trees, red−black trees, separate chaining and linear probing hash tables, Graham scan, and kd-trees.</li><li>Part II focuses on graph and string-processing algorithms. Topics include depth-first search, breadth-first search, topological sort, Kosaraju−Sharir, Kruskal, Prim, Dijkistra, Bellman−Ford, Ford−Fulkerson, LSD radix sort, MSD radix sort, 3-way radix quicksort, multiway tries, ternary search tries, Knuth−Morris−Pratt, Boyer-Moore, Rabin−Karp, regular expression matching, run-length coding, Huffman coding, LZW compression and Burrows−Wheeler transform. Part II also introduces reductions and intractability, including the P = NP problem.</li></ul><p><strong>Prerequisites.</strong> The prerequisite for the course is <a href=\"https://www.coursera.org/learn/algorithms-part1\" target=\"_blank\" rel=\"noopener\">Algorithms, Part I</a>.</p><p><strong>Lectures.</strong> There are two lectures (75 minutes each) per week. Each lecture is broken up into about 4–6 segments, separated by interactive quiz questions to help you process and understand the material.</p><p><strong>Readings.</strong> Our textbook is the basic reference for the material we will be covering. Although the lectures are designed to be self-contained, we will assign suggested (but optional) readings for students who wish more extensive coverage of the material.</p><ul><li><em>Algorithms, 4th Edition</em> by Robert Sedgewick and Kevin Wayne, Addison-Wesley Professional, 2011, ISBN 0-321-57351-X.</li></ul><p>You can purchase the textbook in either <a href=\"http://amzn.to/13VLlYJ\" target=\"_blank\" rel=\"noopener nofollow\" title=\"Link: http://amzn.to/13VLlYJ\" aria-label=\"Link: http://amzn.to/13VLlYJ\">hardcover</a> or <a href=\"http://amzn.to/SpWNbj\" target=\"_blank\" rel=\"noopener nofollow\">electronic</a> format from amazon.com.</p><p>Our <a href=\"http://algs4.cs.princeton.edu/\" target=\"_blank\" rel=\"noopener nofollow\">booksite</a> is open to everyone and contains a wealth of supplementary information, including synopses of the textbook and Java code that you will be using throughout the course.</p><p><strong>Exercises.</strong> (<em>Sorry, Coursera did not migrate the exercises from the old platform.</em>) There is one exercise set associated with each lecture. An exercise set consists of three drill questions, designed to ensure that you understand the basics. We expect that each exercise set will take approximate 10–30 minutes to complete. You may attempt each exercise set up to 10 times (your best score is recorded); you will receive a different set of questions on each attempt. Solutions are provided after each attempt.</p><p><strong>Programming assignments.</strong> There is one Java programming assignment per week. Some of the programming assignments require that you <em>implement</em> a data structure or algorithm from scratch; others require that you <em>apply</em> a data structure or algorithm to solve a problem from science, commerce, or recreation. We expect that each programming assignment will take approximately 4–20 hours to complete, depending on your programming experience and how far beyond the basic performance requirements you wish to go. You may attempt each programming assignment up to 10 times (your best score is recorded). After each attempt, we will provide feedback on correctness and efficiency.</p><p><strong>Java. </strong>The assignments require that you use the Java programming language. More specifically, the autograder uses Java 8 to compile, execute, and test your Java programs. We recommend our custom IntelliJ-based programming environment for <a href=\"https://lift.cs.princeton.edu/java/mac\" target=\"_blank\" rel=\"noopener nofollow\" title=\"Java programming environment for Mac OS X\" aria-label=\"Java programming environment for Mac OS X\">Mac OS X</a>, <a href=\"https://lift.cs.princeton.edu/java/windows\" target=\"_blank\" rel=\"noopener nofollow\" title=\"Java programming environment for Windows\" aria-label=\"Java programming environment for Windows\">Windows</a>, or <a href=\"https://lift.cs.princeton.edu/java/linux\" target=\"_blank\" rel=\"noopener nofollow\" title=\"Java programming environment for Linux\" aria-label=\"Java programming environment for Linux\">Linux</a>, but you are free to use any IDE. More details about the autograder are available in the <a href=\"https://www.coursera.org/learn/algorithms-part2/resources/EoHNB\" target=\"_blank\" rel=\"noopener\">Assessment Guide</a>.</p><p><strong>Final exam.</strong> (<em>Sorry, Coursera did not migrate the final exam from the old platform.</em>) The final exam is cumulative and designed to make sure you understand how each algorithm works and when it is effective. The final does not involve Java programming. Many of the questions will be based on questions from the exercises and in-lecture quizzes. You may attempt the final exam up to 3 times (your best score is recorded).</p><p><strong>Job interview questions.</strong> Each week, we will also provide a few algorithmic job interview questions based on the material for the week, inspired by questions asked at leading technology companies. The questions are for self-enrichment and are not assessed; however, we will provide some hints and you are welcome to discuss solutions in the discussion forums with your classmates.</p><p><strong>Discussion forums.</strong> Please be sure to make use of the discussion forums if you need help, and please contribute to the forums if you think that you can provide help. Such forums have proven to be an important and fun part of the online course experience.</p><p><strong>Honor code.</strong> All students in the course must agree to abide by the Coursera <a href=\"https://www.coursera.org/maestro/auth/normal/tos.php#honorcode\" target=\"_blank\" rel=\"noopener\" title=\"Link: https://www.coursera.org/maestro/auth/normal/tos.php#honorcode\" aria-label=\"Link: https://www.coursera.org/maestro/auth/normal/tos.php#honorcode\">honor code</a>. In particular, do <em>not</em> post solutions or partial solutions to programming assignments (including in the Discussion Forums or online code repositories such as GitHub); however, you are permitted to discuss general ideas and problem-solving approaches. You are also permitted to discuss solutions to exercises and job interview questions.</p><p><strong>Copyright.</strong> All rights reserved. All video recordings, lecture slides, assessments and other materials made available in connection with this course are subject to copyright protection and may be used only for private study by persons who are enrolled in this course. Any other use of these materials must be with the express, written permission of Robert Sedgewick and Kevin Wayne.</p><p><strong>Certificates.</strong> No certificates, statements of accomplishment, or other credentials will be awarded in connection with this course.</p><p><strong>Credits.</strong> We are grateful to many for help in developing this course. We thank Daniel Kearns, Laura Shaddock, and Jeffrey Himpele for video production; Josh Hug for programming assignment infrastructure; Andrew Morrison for exercise infrastructure; and Jack Magill for migrating the programming assignment infrastructure to the new Coursera platform. We also thank Daphne Koller for inspiring us to teach a MOOC.</p></div></div>
